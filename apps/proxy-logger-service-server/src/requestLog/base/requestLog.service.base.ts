/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, RequestLog as PrismaRequestLog } from "@prisma/client";

export class RequestLogServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.RequestLogCountArgs, "select">
  ): Promise<number> {
    return this.prisma.requestLog.count(args);
  }

  async requestLogs<T extends Prisma.RequestLogFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.RequestLogFindManyArgs>
  ): Promise<PrismaRequestLog[]> {
    return this.prisma.requestLog.findMany<Prisma.RequestLogFindManyArgs>(args);
  }
  async requestLog<T extends Prisma.RequestLogFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.RequestLogFindUniqueArgs>
  ): Promise<PrismaRequestLog | null> {
    return this.prisma.requestLog.findUnique(args);
  }
  async createRequestLog<T extends Prisma.RequestLogCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.RequestLogCreateArgs>
  ): Promise<PrismaRequestLog> {
    return this.prisma.requestLog.create<T>(args);
  }
  async updateRequestLog<T extends Prisma.RequestLogUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.RequestLogUpdateArgs>
  ): Promise<PrismaRequestLog> {
    return this.prisma.requestLog.update<T>(args);
  }
  async deleteRequestLog<T extends Prisma.RequestLogDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.RequestLogDeleteArgs>
  ): Promise<PrismaRequestLog> {
    return this.prisma.requestLog.delete(args);
  }
}
